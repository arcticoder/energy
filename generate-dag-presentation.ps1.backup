# Generate standalone HTML presentation from highlights-dag.ndjson
# Usage: .\generate-dag-presentation.ps1

param(
    [string]$InputFile = "highlights-dag.ndjson",
    [string]$OutputFile = "highlights-dag.presentation.html"
)

# Function to convert Unicode math to LaTeX
function Convert-ToLatex($mathString) {
    if (-not $mathString) { return $html += @"
        <div class="math-highlights">
            <h2 style="text-align: center; color: #1a1a2e; margin-bottom: 30px;">üìê Key Mathematical Results</h2> }
    
    # Convert Unicode symbols to LaTeX
    $latex = $mathString
    $latex = $latex -replace "√Ç", "\hat{A}"
    $latex = $latex -replace "√ä", "\hat{E}"
    $latex = $latex -replace "‚àÆ", "\oint"
    $latex = $latex -replace "‚ü®", "\langle "
    $latex = $latex -replace "‚ü©", "\rangle "
    $latex = $latex -replace "Œº", "\mu"
    $latex = $latex -replace "ŒΩ", "\nu"
    $latex = $latex -replace "‚â•", "\geq"
    $latex = $latex -replace "‚Üí", "\to"
    $latex = $latex -replace "‚àû", "\infty"
    $latex = $latex -replace "‚à´", "\int"
    $latex = $latex -replace "Œ¥", "\delta"
    $latex = $latex -replace "œÑ", "\tau"
    $latex = $latex -replace "Œ≥", "\gamma"
    $latex = $latex -replace "Œª", "\lambda"
    $latex = $latex -replace "Œµ", "\varepsilon"
    $latex = $latex -replace "Œ±", "\alpha"
    $latex = $latex -replace "Œ≤", "\beta"
    $latex = $latex -replace "œÉ", "\sigma"
    $latex = $latex -replace "œà", "\psi"
    $latex = $latex -replace "œÅ", "\rho"
    $latex = $latex -replace "œÄ", "\\pi"
    $latex = $latex -replace "‚Ñè", "\\hbar"
    $latex = $latex -replace "‚àò", "\\circ"
    $latex = $latex -replace "‚àë", "\\sum"
    $latex = $latex -replace "Œ£", "\\sum"
    $latex = $latex -replace "‚àá", "\\nabla"
    $latex = $latex -replace "‚àÇ", "\\partial"
    $latex = $latex -replace "√ó", "\\times"
    $latex = $latex -replace "¬∑", "\\cdot"
    $latex = $latex -replace "‚â§", "\\leq"
    $latex = $latex -replace "‚â•", "\\geq"
    $latex = $latex -replace "‚â†", "\\neq"
    $latex = $latex -replace "‚âà", "\\approx"
    $latex = $latex -replace "‚àà", "\\in"
    $latex = $latex -replace "‚àÖ", "\\emptyset"
    $latex = $latex -replace "‚à™", "\\cup"
    $latex = $latex -replace "‚à©", "\\cap"
    $latex = $latex -replace "‚ÇÄ", "_0"
    $latex = $latex -replace "‚ÇÅ", "_1"
    $latex = $latex -replace "‚ÇÇ", "_2"
    $latex = $latex -replace "‚ÇÉ", "_3"
    $latex = $latex -replace "‚ÇÑ", "_4"
    $latex = $latex -replace "‚ÇÖ", "_5"
    $latex = $latex -replace "‚ÇÜ", "_6"
    $latex = $latex -replace "‚Çá", "_7"
    $latex = $latex -replace "‚Çà", "_8"
    $latex = $latex -replace "‚Çâ", "_9"
    $latex = $latex -replace "¬≤", "^2"
    $latex = $latex -replace "¬≥", "^3"
    $latex = $latex -replace "‚Å¥", "^4"
    $latex = $latex -replace "‚Åø", "^n"
    
    return $latex
}

Write-Host "üéØ Generating standalone HTML presentation from DAG..." -ForegroundColor Cyan

# Read and parse the NDJSON file
$dagLines = Get-Content $InputFile
$nodes = @{}
$edges = @{}

# Parse nodes and edges
foreach ($line in $dagLines) {
    $item = $line | ConvertFrom-Json
    if ($item.type -eq "edge") {
        $edges[$item.id] = $item
    } else {
        $nodes[$item.id] = $item
    }
}

Write-Host "üìä Parsed $($nodes.Count) nodes and $($edges.Count) edges" -ForegroundColor Green

# Function to get significance icon
function Get-SignificanceIcon($significance) {
    switch ($significance) {
        "critical" { return "‚ö°" }
        "revolutionary" { return "üî•" }
        "breakthrough" { return "üèóÔ∏è" }
        "major" { return "üéØ" }
        "significant" { return "üåü" }
        default { return "üìç" }
    }
}

# Function to get type icon
function Get-TypeIcon($type) {
    switch ($type) {
        "discovery" { return "üî¨" }
        "breakthrough" { return "üí•" }
        "framework" { return "üèóÔ∏è" }
        "proof" { return "üìê" }
        "implementation" { return "‚öôÔ∏è" }
        default { return "üìã" }
    }
}

# Group nodes by date
$nodesByDate = $nodes.Values | Group-Object -Property date | Sort-Object Name

# Start building HTML
$html = @"
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Research Highlights DAG - A Journey Through Revolutionary Discoveries</title>
    <script type="text/javascript" id="MathJax-script" async
      src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js">
    </script>
    <script>
      MathJax = {
        tex: {
          inlineMath: [['`$', '`$'], ['\\(', '\\)']],
          displayMath: [['`$`$', '`$`$'], ['\\[', '\\]']],
          processEscapes: true,
          processEnvironments: true
        },
        options: {
          skipHtmlTags: ['script', 'noscript', 'style', 'textarea', 'pre']
        }
      };
    </script>
    <style>
      body {
        font-family: "Times New Roman", Times, serif;
        line-height: 1.6;
        color: #333;
        max-width: 1000px;
        margin: 0 auto;
        padding: 20px;
        background: linear-gradient(135deg, #1a1a2e 0%, #16213e 50%, #0f3460 100%);
        color: #fff;
      }
      .container {
        background: rgba(255, 255, 255, 0.95);
        color: #333;
        padding: 40px;
        border-radius: 15px;
        box-shadow: 0 20px 40px rgba(0,0,0,0.3);
      }
      h1 {
        text-align: center;
        color: #1a1a2e;
        font-size: 2.5em;
        margin-bottom: 10px;
        text-shadow: 2px 2px 4px rgba(0,0,0,0.1);
      }
      .subtitle {
        text-align: center;
        font-style: italic;
        color: #666;
        font-size: 1.2em;
        margin-bottom: 30px;
      }
      .quarter-section {
        margin: 40px 0;
        padding: 30px;
        background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
        border-radius: 12px;
        border-left: 6px solid #0f3460;
        box-shadow: 0 8px 16px rgba(0,0,0,0.1);
      }
      .quarter-title {
        color: #1a1a2e;
        font-size: 1.8em;
        margin-bottom: 20px;
        text-align: center;
        font-weight: bold;
      }
      .discovery {
        margin: 25px 0;
        padding: 25px;
        background: white;
        border-radius: 10px;
        border-left: 4px solid #28a745;
        box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        transition: transform 0.2s ease, box-shadow 0.2s ease;
      }
      .discovery:hover {
        transform: translateY(-2px);
        box-shadow: 0 8px 16px rgba(0,0,0,0.15);
      }
      .discovery-title {
        font-size: 1.3em;
        font-weight: bold;
        color: #1a1a2e;
        margin-bottom: 10px;
      }
      .discovery-meta {
        font-size: 0.9em;
        color: #666;
        margin-bottom: 15px;
      }
      .discovery-description {
        margin-bottom: 15px;
        line-height: 1.7;
      }      .mathematics {
        background: #f8f9fa;
        padding: 15px;
        border-radius: 8px;
        margin: 15px 0;
        border-left: 4px solid #007bff;
        overflow-x: auto;
        font-size: 0.9em;
        line-height: 1.4;
      }
      .mathematics .MathJax {
        font-size: 0.85em !important;
      }
      .MathJax_Display {
        font-size: 0.9em !important;
        overflow-x: auto;
        overflow-y: hidden;
      }
      .mathematics-label {
        font-weight: bold;
        color: #007bff;
        margin-bottom: 10px;
      }
      .impact {
        font-style: italic;
        color: #28a745;
        background: #f8fff9;
        padding: 12px;
        border-radius: 6px;
        border-left: 3px solid #28a745;
        margin-top: 15px;
      }
      .summary-section {
        margin: 50px 0;
        padding: 30px;
        background: linear-gradient(135deg, #1a1a2e 0%, #16213e 100%);
        color: white;
        border-radius: 12px;
        text-align: center;
      }
      .math-highlights {
        margin: 40px 0;
        padding: 30px;
        background: linear-gradient(135deg, #e3f2fd 0%, #bbdefb 100%);
        border-radius: 12px;
        border-left: 6px solid #2196f3;
      }
      .math-highlight {
        margin: 20px 0;
        padding: 20px;
        background: white;
        border-radius: 8px;
        box-shadow: 0 4px 8px rgba(0,0,0,0.1);
      }
      .footer {
        text-align: center;
        margin-top: 50px;
        padding: 20px;
        border-top: 2px solid #dee2e6;
        color: #666;
        font-size: 0.9em;
      }
      .critical { border-left-color: #dc3545; }
      .revolutionary { border-left-color: #fd7e14; }
      .breakthrough { border-left-color: #ffc107; }
      .major { border-left-color: #20c997; }
      .significant { border-left-color: #6f42c1; }
    </style>
</head>
<body>
    <div class="container">        <h1>Theoretical Physics Research Compendium</h1>
        <p class="subtitle">Mathematical Developments in Quantum Gravity and Spacetime Engineering</p>
        <p style="text-align: center; color: #666; margin-bottom: 40px;">
            <strong>Research Documentation</strong> | June 21, 2025
        </p>

"@

# Add discoveries by quarter
foreach ($quarter in $nodesByDate) {    $quarterTitle = switch ($quarter.Name) {
        "2024-Q1" { "2024 Q1: Foundational Theory Development" }
        "2024-Q2" { "2024 Q2: Mathematical Framework Extension" }
        "2024-Q3" { "2024 Q3: Proof Development and Validation" }
        "2024-Q4" { "2024 Q4: Applied Theoretical Analysis" }
        "2025-Q1" { "2025 Q1: Advanced Mathematical Methods" }
        default { $quarter.Name }
    }
    
    $html += @"
        <div class="quarter-section">
            <h2 class="quarter-title">$quarterTitle</h2>

"@
    
    foreach ($node in $quarter.Group) {
        $icon = Get-SignificanceIcon $node.significance
        $typeIcon = Get-TypeIcon $node.type
        $cssClass = $node.significance
        
        $html += @"
            <div class="discovery $cssClass">
                <div class="discovery-title">$icon $typeIcon $($node.title)</div>
                <div class="discovery-meta">
                    <strong>Type:</strong> $($node.type.ToUpper()) | 
                    <strong>Significance:</strong> $($node.significance.ToUpper())
                </div>
                <div class="discovery-description">$($node.description)</div>

"@
        
        if ($node.mathematics) {
            $mathematics = Convert-ToLatex $node.mathematics
            $html += @"
                <div class="mathematics">
                    <div class="mathematics-label">Mathematics:</div>
                    `$`$$mathematics`$`$
                </div>

"@
        }
        
        if ($node.impact) {
            $html += @"
                <div class="impact">
                    <strong>Impact:</strong> $($node.impact)
                </div>

"@
        }
        
        $html += @"
            </div>

"@
    }
    
    $html += @"
        </div>

"@
}

# Add mathematical highlights section
$mathNodes = $nodes.Values | Where-Object { $_.mathematics -ne $null } | Select-Object -First 8

$html += @"        <div class="math-highlights">
            <h2 style="text-align: center; color: #1a1a2e; margin-bottom: 30px;">ÔøΩ Key Mathematical Results</h2>

"@

foreach ($node in $mathNodes) {
    $icon = Get-SignificanceIcon $node.significance
    $mathematics = Convert-ToLatex $node.mathematics
    $html += @"
            <div class="math-highlight">
                <h3>$icon $($node.title)</h3>
                <div class="mathematics">
                    `$`$$mathematics`$`$
                </div>
            </div>

"@
}

$html += @"
        </div>

"@

# Add summary section
$html += @"        <div class="summary-section">
            <h2>üìä Research Overview</h2>
            <p style="font-size: 1.1em; margin: 20px 0;">
                <strong>$($nodes.Count)</strong> theoretical developments documented across <strong>5 quarters</strong> of research
            </p>
            <div style="display: flex; justify-content: space-around; flex-wrap: wrap; margin: 30px 0;">
                <div style="margin: 10px;">
                    <div style="font-size: 1.5em;">üìê</div>
                    <div>Mathematical Foundations</div>
                </div>
                <div style="margin: 10px;">
                    <div style="font-size: 1.5em;">ÔøΩ</div>
                    <div>Theoretical Discoveries</div>
                </div>
                <div style="margin: 10px;">
                    <div style="font-size: 1.5em;">üìä</div>
                    <div>Analytical Frameworks</div>
                </div>
                <div style="margin: 10px;">
                    <div style="font-size: 1.5em;">‚öôÔ∏è</div>
                    <div>Applied Mathematics</div>
                </div>
                <div style="margin: 10px;">
                    <div style="font-size: 1.5em;">üìã</div>
                    <div>Research Documentation</div>
                </div>
            </div>
        </div>

        <div class="footer">
            <p><strong>Data Sources:</strong></p>
            <p>üìä <strong>DAG Structure:</strong> highlights-dag.ndjson | 
               üìö <strong>Documentation Index:</strong> documentation-index.ndjson | 
               ‚ö†Ô∏è <strong>Uncertainty Analysis:</strong> UQ-TODO.ndjson</p>
            <p style="margin-top: 20px;">
                <em>Generated automatically from research highlights database</em>
            </p>
        </div>
    </div>
</body>
</html>
"@

# Write the HTML file
$html | Out-File -FilePath $OutputFile -Encoding UTF8

Write-Host "‚úÖ Generated $OutputFile" -ForegroundColor Green
Write-Host "üìä Presentation includes: $($nodes.Count) discoveries, $($mathNodes.Count) mathematical highlights" -ForegroundColor Yellow
Write-Host "üåê Open the HTML file in a browser to view the presentation" -ForegroundColor Cyan
Write-Host "üéØ Script completed!" -ForegroundColor Green
