{"task":"Numeric validation of subspace transmission range vs link budget","priority":"High","depends_on":"C:\\Users\\%USERNAME%\\Code\\asciimath\\energy\\analysis\\realistic_subspace_analysis\\VnV-TODO.ndjson","source_file":"C:\\Users\\echo_\\Code\\asciimath\\energy\\analysis\\analyze_subspace_range.py","source_file_lines":"7:10","source_snippet":"def analyze_transmission_range():\n    \"\"\"Analyze transmission range vs signal strength.\"\"\"\n    # computes mapping from distance→max range","python_snippet":"import numpy as np\nfrom energy.analysis.analyze_subspace_range import analyze_transmission_range\nfrom energy.analysis.realistic_subspace_analysis import calculate_link_budget\n# test sample distances (m)\nfor d in [1e3, 1e6, 1e9]:\n    rng_map = analyze_transmission_range()\n    # assume rng_map returns dict distance→link_budget\n    assert np.isclose(rng_map[d], calculate_link_budget(d), atol=1e-3), \\\n        f\"Mismatch range vs link budget for {d}\""}  
{"task":"Numeric validation of Earth station coverage vs relay network requirements","priority":"High","depends_on":"C:\\Users\\%USERNAME%\\Code\\asciimath\\energy\\analysis\\analyze_subspace_range\\VnV-TODO.ndjson","source_file":"C:\\Users\\echo_\\Code\\asciimath\\energy\\analysis\\analyze_subspace_range.py","source_file_lines":"15:18","source_snippet":"def calculate_earth_coverage():\n    \"\"\"Calculate Earth ground station requirements for 24/7 coverage.\"\"\"\n    # returns (num_stations, station_locations)","python_snippet":"import numpy as np\nfrom energy.analysis.analyze_subspace_range import calculate_earth_coverage\nfrom energy.analysis.realistic_subspace_analysis import calculate_relay_network\n# sanity‐check sample region specs\nnum_stations, locs = calculate_earth_coverage()\nnum_relays = calculate_relay_network()\nassert isinstance(num_stations, int) and num_stations > 0, \"Invalid station count\"\nassert num_relays is not None, \"Relay network requirements missing\""}